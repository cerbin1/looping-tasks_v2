{"version":3,"sources":["components/Element.js","components/Task.js","Data.js","components/Tasks.js","App.js","serviceWorker.js","index.js"],"names":["Element","props","className","isClicked","onClick","setElementClicked","index","name","Task","elements","state","autoClickedElementIndex","setState","allElementsClicked","every","value","autoClickNextElement","handleSpaceBarClick","event","keyCode","links","document","addEventListener","this","map","element","i","target","rel","key","href","link","length","style","color","Component","Data","taskData","Tasks","homePage","homePageText","tasks","getTasksData","taskDataElements","taskName","TaskData","forEach","push","id","convertToTaskElements","to","task","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+SAQeA,EALC,SAACC,GACb,OAAO,yBAAKC,UAAWD,EAAME,UAAY,4BAA8B,2BAC3DC,QAAS,kBAAMH,EAAMI,kBAAkBJ,EAAMK,SAASL,EAAMM,OCsF7DC,E,YAtFX,WAAYP,GAAQ,IAAD,8BACf,4CAAMA,KAaVI,kBAAoB,SAACC,GACjB,IAAIG,EAAW,EAAKC,MAAMD,SAC1BA,EAASH,GAAOH,WAAaM,EAASH,GAAOH,UAC7C,IAAIQ,EAA0B,EAAKD,MAAMJ,MACzC,EAAKM,SAAS,CACVH,SAAUA,EACVH,QAASK,KApBE,EAwBnBE,mBAAqB,WACjB,OAAO,EAAKH,MAAMD,SAASK,OAAM,SAAAC,GAAK,OAAIA,EAAMZ,cAzBjC,EA4BnBa,qBAAuB,WACnB,IAAK,EAAKH,qBAAsB,CAC5B,IAAIJ,EAAW,EAAKC,MAAMD,SACtBE,EAA0B,EAAKD,MAAMJ,MACzCG,EAASE,GAAyBR,WAAY,EAC9C,EAAKS,SAAS,CACVH,SAAUA,EACVH,QAASK,MAnCF,EAwCnBM,oBAAsB,SAACC,GACG,KAAlBA,EAAMC,SACN,EAAKH,wBAxCT,EAAKN,MAAQ,CACTH,KAAMN,EAAMM,KACZE,SAAUR,EAAMQ,SAChBW,MAAOnB,EAAMmB,MACbd,MAAO,GANI,E,iFAWfe,SAASC,iBAAiB,UAAWC,KAAKN,qBAAqB,K,+BAmCzD,IAAD,OACL,OACI,6BACI,6BACA,yBAAKf,UAAU,OACX,yBAAKA,UAAU,wBACX,4BAAQA,UAAW,yBAA0BE,QAASmB,KAAKP,sBAA3D,UAGa,MAApBO,KAAKb,MAAMU,MAAgB,KACxB,yBAAKlB,UAAU,OACX,yBAAKA,UAAU,sDACVqB,KAAKb,MAAMU,MAAMI,KAAI,SAACC,EAASC,GAC5B,OAAQ,uBAAGxB,UAAU,aAAayB,OAAO,SAASC,IAAI,sBAC3CC,IAAKH,EAAGI,KAAML,EAAQM,MAAON,EAAQlB,KADxC,IAC+CmB,EAAI,EAAKhB,MAAMU,MAAMY,OAAS,EAAK,KAAO,GADzF,UAMxB,yBAAK9B,UAAU,OACX,yBAAKA,UAAU,yCACVqB,KAAKb,MAAMD,SAASe,KAAI,SAACC,EAASC,GAC/B,OAAO,kBAAC,EAAD,CAASrB,kBAAmB,EAAKA,kBACxBC,MAAOoB,EACPG,IAAKH,EACLnB,KAAMkB,EAAQlB,KACdJ,UAAWsB,EAAQtB,iBAI/C,yBAAKD,UAAU,OACX,yBAAKA,UAAU,kCACX,wBAAI+B,MAAO,CAACC,MAAOX,KAAKV,qBAAuB,QAAU,QAASU,KAAKb,MAAMH,a,GA/ElF4B,a,eCJbC,E,kCAAAA,EACKC,SAAW,CACd,CACI9B,KAAM,gBACNa,MAAO,CACH,CACIb,KAAM,cACNwB,KAAM,+GAEV,CACIxB,KAAM,eACNwB,KAAM,4CAGdtB,SAAU,CACN,qCACA,+BACA,mCACA,cACA,sBACA,iBAGR,CACIF,KAAM,cACNa,MAAO,CACH,CACIb,KAAM,gBACNwB,KAAM,gDAGdtB,SAAU,CACN,oBACA,8BACA,yBACA,+CACA,0CACA,8DAGR,CACIF,KAAM,cACNa,MAAO,CACH,CACIb,KAAM,gBACNwB,KAAM,gDAGdtB,SAAU,CACN,sCACA,4BACA,uBACA,oBACA,wBACA,oBACA,iBACA,kBAGR,CACIF,KAAM,4BACNa,MAAO,CACH,CACIb,KAAM,YACNwB,KAAM,gCAEV,CACIxB,KAAM,MACNwB,KAAM,yBAEV,CACIxB,KAAM,QACNwB,KAAM,oCAEV,CACIxB,KAAM,QACNwB,KAAM,uCAEV,CACIxB,KAAM,QACNwB,KAAM,2GAGdtB,SAAU,CACN,oDACA,qFACA,6HACA,sBACA,6DACA,mCACA,iDACA,8GACA,0EACA,6CAGR,CACIF,KAAM,0BACNa,MAAO,CACH,CACIb,KAAM,SACNwB,KAAM,2GAGdtB,SAAU,CACN,uCACA,wCACA,+CACA,2CACA,4IACA,6DACA,iEACA,iEACA,6CACA,8IACA,0DACA,gDACA,gEACA,qDACA,6GAGR,CACIF,KAAM,6BACNa,MAAO,CACH,CACIb,KAAM,SACNwB,KAAM,4GAGdtB,SAAU,CACN,gDACA,yDACA,+EACA,mCACA,8EACA,0DACA,iGACA,4CACA,+BACA,oDAGR,CACIF,KAAM,mCACNa,MAAO,CACH,CACIb,KAAM,OACNwB,KAAM,+GAEV,CACIxB,KAAM,gBACNwB,KAAM,mGAGdtB,SAAU,CACN,kCACA,2BACA,gFACA,oEACA,sCACA,8BACA,+FACA,sCACA,wBACA,4DACA,oDACA,6CAMD2B,QC1GAE,E,2MA1CX5B,MAAQ,CACJ6B,SAAU,wBACVC,aAAc,+BACdC,MAAO,EAAKC,gB,qFAtBMC,GAClB,OAAOA,EAAiBnB,KAAI,SAAAoB,GAAQ,MAAK,CAACrC,KAAMqC,EAAUzC,WAAW,Q,qCAGzD,IAAD,OACPsC,EAAQ,GAWZ,OAVAI,EAASR,SAASS,SAAQ,SAACT,EAAU/B,GACjCmC,EAAMM,KACF,CACIC,GAAI1C,EACJC,KAAM8B,EAAS9B,KACfa,MAAOiB,EAASjB,MAChBX,SAAU,EAAKwC,sBAAsBZ,EAAS5B,eAInDgC,I,+BAUP,OAAO,yBAAKvC,UAAU,aAClB,kBAAC,IAAD,KACI,6BACI,6BACI,4BAAI,kBAAC,IAAD,CAAMgD,GAAG,KAAK3B,KAAKb,MAAM6B,WAC7B,6BACChB,KAAKb,MAAM+B,MAAMjB,KAAI,SAAA2B,GACd,OACI,wBAAItB,IAAKsB,EAAKH,IAAI,kBAAC,IAAD,CAAME,GAAI,IAAMC,EAAKH,IAAKG,EAAK5C,WAMjE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,KACd,2BAAI9B,KAAKb,MAAM8B,eAGlBjB,KAAKb,MAAM+B,MAAMjB,KAAI,SAAA2B,GACd,OACI,kBAAC,IAAD,CAAOtB,IAAKsB,EAAKH,GAAII,OAAK,EAACC,KAAM,IAAMF,EAAKH,GAAIM,UAAW,kBACvD,kBAAC,EAAD,CAAM/C,KAAM4C,EAAK5C,KACXE,SAAU0C,EAAK1C,SACfW,MAAO+B,EAAK/B,sB,GAnDtCe,aCOLoB,MARf,WACI,OACI,yBAAKrD,UAAU,OACX,kBAAC,EAAD,QCKQsD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASzC,SAAS0C,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.81feb0b9.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Element = (props) => {\n    return <div className={props.isClicked ? 'btn btn-block btn-success' : 'btn btn-block btn-danger'}\n                onClick={() => props.setElementClicked(props.index)}>{props.name}</div>\n};\n\nexport default Element;\n","import React, {Component} from \"react\";\nimport Element from \"./Element\";\n\n\nclass Task extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: props.name,\n            elements: props.elements,\n            links: props.links,\n            index: 0\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.handleSpaceBarClick, false);\n    }\n\n    setElementClicked = (index) => {\n        let elements = this.state.elements;\n        elements[index].isClicked = !elements[index].isClicked;\n        let autoClickedElementIndex = this.state.index;\n        this.setState({\n            elements: elements,\n            index: ++autoClickedElementIndex,\n        })\n    };\n\n    allElementsClicked = () => {\n        return this.state.elements.every(value => value.isClicked)\n    };\n\n    autoClickNextElement = () => {\n        if (!this.allElementsClicked()) {\n            let elements = this.state.elements;\n            let autoClickedElementIndex = this.state.index;\n            elements[autoClickedElementIndex].isClicked = true;\n            this.setState({\n                elements: elements,\n                index: ++autoClickedElementIndex,\n            })\n        }\n    };\n\n    handleSpaceBarClick = (event) => {\n        if (event.keyCode === 32) {\n            this.autoClickNextElement();\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <hr/>\n                <div className=\"row\">\n                    <div className=\"col text-center mb-1\">\n                        <button className={\"btn btn-success btn-lg\"} onClick={this.autoClickNextElement}>Done</button>\n                    </div>\n                </div>\n                {this.state.links == null ? null :\n                    <div className=\"row\">\n                        <div className=\"col-xl-10 offset-1 text-center alert alert-primary\">\n                            {this.state.links.map((element, i) => {\n                                return (<a className=\"alert-link\" target=\"_blank\" rel=\"noopener noreferrer\"\n                                           key={i} href={element.link}>{element.name} {i < this.state.links.length - 1  ? '||' : ''} </a>)\n                            })}\n                        </div>\n                    </div>\n                }\n                <div className=\"row\">\n                    <div className=\"btn-group-vertical col-xl-10 offset-1\">\n                        {this.state.elements.map((element, i) => {\n                            return <Element setElementClicked={this.setElementClicked}\n                                            index={i}\n                                            key={i}\n                                            name={element.name}\n                                            isClicked={element.isClicked}/>\n                        })}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-xl-10 offset-1 text-center\">\n                        <h2 style={{color: this.allElementsClicked() ? 'green' : 'red'}}>{this.state.name}</h2>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Task;\n","class Data {\n    static taskData = [\n        {\n            name: \"Porządki\",\n            links: [\n                {\n                    name: \"Quick Notes\",\n                    link: \"https://docs.google.com/document/d/1lKqrQYRtmsOP9UGHxnAQOOw01lfaMSjDvesVK4l-8wo/edit#heading=h.enryj93vpczc\"\n                },\n                {\n                    name: \"Google Drive\",\n                    link: \"https://drive.google.com/drive/my-drive\"\n                },\n            ],\n            elements: [\n                \"Organizacja maila głównego\",\n                \"Organizacja maila prywatnego\",\n                \"Utworzyć taski z Make Notes\",\n                \"Quick Notes\",\n                \"Notatki w telefonie\",\n                \"Google Drive\",\n            ]\n        },\n        {\n            name: \"Backup Soft\",\n            links: [\n                {\n                    name: \"Google backup\",\n                    link: \"https://takeout.google.com/settings/takeout\"\n                },\n            ],\n            elements: [\n                \"[Google] Calendar\",\n                \"[Google] Chrome (Bookmarks)\",\n                \"[Google] Drive (Notes)\",\n                \"Uruchomić automatyzację (alias a3)\",\n                \"Wypakować backup googla do folderu\",\n                \"Wyciąć cały folder na zewnętrzny dysk\",\n            ]\n        },\n        {\n            name: \"Backup Hard\",\n            links: [\n                {\n                    name: \"Google backup\",\n                    link: \"https://takeout.google.com/settings/takeout\"\n                },\n            ],\n            elements: [\n                \"OneNote cały notatnik jako doc\",\n                \"Folder Documents (Ubuntu)\",\n                \"Folder Dane (Dysk D)\",\n                \"[Google] Calendar\",\n                \"[Google] Chrome (all)\",\n                \"[Google] Contacts\",\n                \"[Google] Drive\",\n                \"[Google] Mail\",\n            ]\n        },\n        {\n            name: \"Nowy miesiąc: Biznes\",\n            links: [\n                {\n                    name: \"Prąd\",\n                    link: \"https://logowanie.tauron.pl/\"\n                },\n                {\n                    name: \"PKO\",\n                    link: \"https://www.ipko.pl//\"\n                },\n                {\n                    name: \"mBank\",\n                    link: \"https://online.mbank.pl/pl/Login\"\n                },\n                {\n                    name: \"Alior\",\n                    link: \"https://system.aliorbank.pl/sign-in\"\n                },\n                {\n                    name: \"Sheet\",\n                    link: \"https://docs.google.com/spreadsheets/d/1RS4WCPEqILRgId3JlfXZuRd_f6kWZtYg1hzfhM8Y4n8/edit#gid=963549029\"\n                },\n            ],\n            elements: [\n                \"Przywrócić czarny kolor kolejnej kolumnie\",\n                \"Sprawdzić czy zgadza się kwota pracy za ostatni miesiąc z przelewem\",\n                \"Opłacić media, abonamenty i kredyty, pobrać faktury i potwierdzenia płatności, zapisać kwoty\",\n                \"Opłacić X\",\n                \"Zapisać pracę biorąc pod uwagę godziny\",\n                \"Uzupełnić kwoty z apki\",\n                \"Uzupełnić resztę kwot w arkuszu\",\n                \"Zaktualizować kwoty w arkuszu Oszczędności po opłaceniu wszystkiego na ten miesiąc\",\n                \"Zapisać zsumowaną kwotę na start kolejnego miesiąca\",\n                \"Przeanalizować ostatni miesiąc\",\n            ]\n        },\n        {\n            name: \"Nowy miesiąc: TODO\",\n            links: [\n                {\n                    name: \"Sheets\",\n                    link: \"https://docs.google.com/spreadsheets/d/1RS4WCPEqILRgId3JlfXZuRd_f6kWZtYg1hzfhM8Y4n8/edit#gid=82903271/\"\n                },\n            ],\n            elements: [\n                \"Skopiować dwie pierwsze kolumny\",\n                \"Zmienić nazwę miesiąca\",\n                \"Zmienić kolor drugiej kolumny na czarny\",\n                \"Insert daty i ustawienie na 1 dzień\",\n                \"Zaznaczyć pierwszy dzień, pogrubić, zastosować skrót daty i sformatować: Format -> Text rotation -> Rotate Up\",\n                \"Przeciągnąć dni do końca miesiąca\",\n                \"Przeciągnąć wzór do końca miesiąca\",\n                \"Skopiować nie zaznaczony checkbox z któregoś pola\",\n                \"Zaznaczyć z ctrl wszystkie puste pola\",\n                \"Wkleić wcześniej zaznaczonego checkboxa (nie wstawić, trzeba skopiować z innego pola checkbox i dopiero skopiować)\",\n                \"Uruchomić automatyzację do pythona (alias a1)\",\n                \"Wstawić formatowanie dat i checkboxów\",\n                \"Ukryć wiersze z czynności za poprzedni miesiąc\",\n                \"Ustawić kolor kolumny ze wzorem na biały\",\n                \"Instrukcje z końca co do formatowania przekopiować niżej żeby nie przeszkadzały\",\n            ]\n        },\n        {\n            name: \"Nowy miesiąc: Trening\",\n            links: [\n                {\n                    name: \"Sheets\",\n                    link: \"https://docs.google.com/spreadsheets/d/1RS4WCPEqILRgId3JlfXZuRd_f6kWZtYg1hzfhM8Y4n8/edit#gid=568847193/\"\n                },\n            ],\n            elements: [\n                \"Wpisać nowy miesiąc i pogrubić\",\n                \"Insert daty i ustawienie na 1 dzień miesiąca\",\n                \"Sformatować datę używając pędzla i daty poprzedniej\",\n                \"Wstawić obok pusty checkbox\",\n                \"Przeciągnąć datę i checkbox do końca miesiąca\",\n                \"Uruchomić automatyzację do pythona (alias a2)\",\n                \"Wstawić formułę do dni i przeciągnąć do końca miesiąca\",\n                \"Wstawić formuły zliczające\",\n                \"Szybka analiza miesiąca\",\n                \"Ukryć rekordy z poprzedniego miesiąca\",\n            ]\n        },\n        {\n            name: \"Comiesięczne czynności\",\n            links: [\n                {\n                    name: \"Docs\",\n                    link: \"https://docs.google.com/document/d/1lKqrQYRtmsOP9UGHxnAQOOw01lfaMSjDvesVK4l-8wo/edit#heading=h.b36bz1pk3gth\"\n                },\n                {\n                    name: \"Sheets Szekle\",\n                    link: \"https://docs.google.com/spreadsheets/d/1u4sHO-mkux9d0xELt6XRo3IVpdoQrDb0cvN-U4ZQZ-E/edit#gid=0\"\n                },\n            ],\n            elements: [\n                \"Przebadać się (p i j)\",\n                \"Przetestować czujki\",\n                \"Sprawdzić luzy i stan śrub w hulajnodze, dopompować dętki\",\n                \"Zrobić wszystkie punkty z konserwacji orbitreka z instrukcji\",\n                \"Zaaplikować sól do zmywarki\",\n                \"Przemyć szafki z kurzu\",\n                \"Odkurzyć laser w odświeżaczu i wymienić bawełnianą owijkę\",\n                \"Kupić potrzebne rzeczy z docsa\",\n                \"Organizacja Temp Docs\",\n                \"Aktualizacja arkusza z cyklicznymi płatnościami\",\n                \"Zaktualizować listę (todoist i onenote)\",\n                \"Fryzjer - zarezerwować wizytę\",\n            ]\n        },\n    ]\n}\n\nexport default Data;\n","import React, {Component} from 'react'\nimport Task from \"./Task\";\nimport {HashRouter as Router, Link, Route, Switch} from 'react-router-dom'\nimport TaskData from '../Data'\n\nclass Tasks extends Component {\n    convertToTaskElements(taskDataElements) {\n        return taskDataElements.map(taskName => ({name: taskName, isClicked: false}))\n    }\n\n    getTasksData() {\n        let tasks = [];\n        TaskData.taskData.forEach((taskData, index) => {\n            tasks.push(\n                {\n                    id: index,\n                    name: taskData.name,\n                    links: taskData.links,\n                    elements: this.convertToTaskElements(taskData.elements),\n                }\n            )\n        })\n        return tasks;\n    }\n\n    state = {\n        homePage: 'Strona główna',\n        homePageText: 'Wybierz zadanie do zrobienia',\n        tasks: this.getTasksData()\n    };\n\n    render() {\n        return <div className=\"container\">\n            <Router>\n                <div>\n                    <nav>\n                        <h1><Link to=\"/\">{this.state.homePage}</Link></h1>\n                        <hr/>\n                        {this.state.tasks.map(task => {\n                                return (\n                                    <h2 key={task.id}><Link to={'/' + task.id}>{task.name}</Link></h2>\n                                )\n                            }\n                        )}\n                    </nav>\n\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <p>{this.state.homePageText}</p>\n                        </Route>\n\n                        {this.state.tasks.map(task => {\n                                return (\n                                    <Route key={task.id} exact path={'/' + task.id} component={() =>\n                                        <Task name={task.name}\n                                              elements={task.elements}\n                                              links={task.links}/>}>\n                                    </Route>)\n                            }\n                        )}\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    }\n}\n\nexport default Tasks;\n","import React from 'react';\nimport './App.css';\nimport Tasks from './components/Tasks'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Tasks/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}