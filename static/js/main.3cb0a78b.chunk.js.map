{"version":3,"sources":["components/Element.js","components/Task.js","components/Tasks.js","App.js","serviceWorker.js","index.js"],"names":["Element","props","className","isClicked","onClick","setElementClicked","index","name","Task","elements","state","autoClickedElementIndex","setState","allElementsClicked","every","value","autoClickNextElement","handleSpaceBarClick","event","keyCode","links","document","addEventListener","this","map","element","i","target","rel","key","href","link","style","color","Component","Tasks","homePage","homePageText","tasks","id","to","task","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+SAQeA,EALC,SAACC,GACb,OAAO,yBAAKC,UAAWD,EAAME,UAAY,4BAA8B,2BAC3DC,QAAS,kBAAMH,EAAMI,kBAAkBJ,EAAMK,SAASL,EAAMM,OCsF7DC,E,YAtFX,WAAYP,GAAQ,IAAD,8BACf,4CAAMA,KAaVI,kBAAoB,SAACC,GACjB,IAAIG,EAAW,EAAKC,MAAMD,SAC1BA,EAASH,GAAOH,WAAaM,EAASH,GAAOH,UAC7C,IAAIQ,EAA0B,EAAKD,MAAMJ,MACzC,EAAKM,SAAS,CACVH,SAAUA,EACVH,QAASK,KApBE,EAwBnBE,mBAAqB,WACjB,OAAO,EAAKH,MAAMD,SAASK,OAAM,SAAAC,GAAK,OAAIA,EAAMZ,cAzBjC,EA4BnBa,qBAAuB,WACnB,IAAK,EAAKH,qBAAsB,CAC5B,IAAIJ,EAAW,EAAKC,MAAMD,SACtBE,EAA0B,EAAKD,MAAMJ,MACzCG,EAASE,GAAyBR,WAAY,EAC9C,EAAKS,SAAS,CACVH,SAAUA,EACVH,QAASK,MAnCF,EAwCnBM,oBAAsB,SAACC,GACG,KAAlBA,EAAMC,SACN,EAAKH,wBAxCT,EAAKN,MAAQ,CACTH,KAAMN,EAAMM,KACZE,SAAUR,EAAMQ,SAChBW,MAAOnB,EAAMmB,MACbd,MAAO,GANI,E,iFAWfe,SAASC,iBAAiB,UAAWC,KAAKN,qBAAqB,K,+BAmCzD,IAAD,OACL,OACI,6BACI,6BACA,yBAAKf,UAAU,OACX,yBAAKA,UAAU,wBACX,4BAAQA,UAAW,yBAA0BE,QAASmB,KAAKP,sBAA3D,UAGa,MAApBO,KAAKb,MAAMU,MAAgB,KACxB,yBAAKlB,UAAU,OACX,yBAAKA,UAAU,sDACVqB,KAAKb,MAAMU,MAAMI,KAAI,SAACC,EAASC,GAC5B,OAAQ,uBAAGxB,UAAU,aAAayB,OAAO,SAASC,IAAI,sBAC3CC,IAAKH,EAAGI,KAAML,EAAQM,MAAON,EAAQlB,KADxC,aAMxB,yBAAKL,UAAU,OACX,yBAAKA,UAAU,yCACVqB,KAAKb,MAAMD,SAASe,KAAI,SAACC,EAASC,GAC/B,OAAO,kBAAC,EAAD,CAASrB,kBAAmB,EAAKA,kBACxBC,MAAOoB,EACPG,IAAKH,EACLnB,KAAMkB,EAAQlB,KACdJ,UAAWsB,EAAQtB,iBAI/C,yBAAKD,UAAU,OACX,yBAAKA,UAAU,kCACX,wBAAI8B,MAAO,CAACC,MAAOV,KAAKV,qBAAuB,QAAU,QAASU,KAAKb,MAAMH,a,GA/ElF2B,a,eCuMJC,E,2MAtMXzB,MAAQ,CACJ0B,SAAU,wBACVC,aAAc,+BACdC,MACI,CACI,CACIC,GAAI,QACJhC,KAAM,gBACNa,MAAO,CACH,CACIb,KAAM,cACNwB,KAAM,+GAEV,CAACxB,KAAM,eAAgBwB,KAAM,4CAEjCtB,SAAU,CACN,CAACF,KAAM,qCAA8BJ,WAAW,GAChD,CAACI,KAAM,+BAAgCJ,WAAW,GAClD,CAACI,KAAM,mCAA+BJ,WAAW,GACjD,CAACI,KAAM,cAAeJ,WAAW,GACjC,CAACI,KAAM,sBAAuBJ,WAAW,GACzC,CAACI,KAAM,eAAgBJ,WAAW,KAG1C,CACIoC,GAAI,QACJhC,KAAM,cACNa,MAAO,CAAC,CAACb,KAAM,gBAAiBwB,KAAM,gDACtCtB,SAAU,CACN,CAACF,KAAM,oBAAqBJ,WAAW,GACvC,CAACI,KAAM,8BAA+BJ,WAAW,GACjD,CAACI,KAAM,yBAA0BJ,WAAW,GAC5C,CAACI,KAAM,mDAA+CJ,WAAW,KAGzE,CACIoC,GAAI,QACJhC,KAAM,cACNa,MAAO,CAAC,CAACb,KAAM,gBAAiBwB,KAAM,gDACtCtB,SAAU,CACN,CAACF,KAAM,sCAAkCJ,WAAW,GACpD,CAACI,KAAM,4BAA6BJ,WAAW,GAC/C,CAACI,KAAM,uBAAwBJ,WAAW,GAC1C,CAACI,KAAM,0BAA2BJ,WAAW,GAC7C,CAACI,KAAM,oBAAqBJ,WAAW,GACvC,CAACI,KAAM,wBAAyBJ,WAAW,GAC3C,CAACI,KAAM,oBAAqBJ,WAAW,GACvC,CAACI,KAAM,iBAAkBJ,WAAW,GACpC,CAACI,KAAM,gBAAiBJ,WAAW,KAG3C,CACIoC,GAAI,QACJhC,KAAM,4BACNa,MAAO,CACH,CAACb,KAAM,MAAOwB,KAAM,0BACpB,CAACxB,KAAM,YAAQwB,KAAM,gCACrB,CAACxB,KAAM,MAAOwB,KAAM,yBACpB,CAACxB,KAAM,QAASwB,KAAM,oCACtB,CAACxB,KAAM,QAASwB,KAAM,uCACtB,CACIxB,KAAM,QACNwB,KAAM,2GAGdtB,SAAU,CACN,CACIF,KAAM,qDAEV,CAACA,KAAM,qFAAuEJ,WAAW,GACzF,CAACI,KAAM,6HAAgGJ,WAAW,GAClH,CAACI,KAAM,sBAAaJ,WAAW,GAC/B,CAACI,KAAM,6DAA0CJ,WAAW,GAC5D,CAACI,KAAM,mCAA0BJ,WAAW,GAC5C,CAACI,KAAM,iDAAmCJ,WAAW,GACrD,CAACI,KAAM,8GAAsFJ,WAAW,GACxG,CAACI,KAAM,0EAAuDJ,WAAW,GACzE,CAACI,KAAM,2CAAkCJ,WAAW,KAG5D,CACIoC,GAAI,QACJhC,KAAM,0BACNa,MAAO,CACH,CACIb,KAAM,SACNwB,KAAM,2GAGdtB,SAAU,CACN,CAACF,KAAM,uCAAmCJ,WAAW,GACrD,CAACI,KAAM,wCAA0BJ,WAAW,GAC5C,CAACI,KAAM,+CAA2CJ,WAAW,GAC7D,CAACI,KAAM,2CAAuCJ,WAAW,GACzD,CAACI,KAAM,uDAAsCJ,WAAW,GACxD,CAACI,KAAM,wEAAoEJ,WAAW,GACtF,CAACI,KAAM,6DAAqCJ,WAAW,GACvD,CAACI,KAAM,2CAAkCJ,WAAW,GACpD,CAACI,KAAM,iEAAqDJ,WAAW,GACvE,CAACI,KAAM,6CAAyCJ,WAAW,GAC3D,CACII,KAAM,8IACNJ,WAAW,GAEf,CAACI,KAAM,0DAAiDJ,WAAW,GACnE,CAACI,KAAM,gDAAyCJ,WAAW,GAC3D,CAACI,KAAM,gEAAkDJ,WAAW,GACpE,CAACI,KAAM,qDAA4CJ,WAAW,GAC9D,CACII,KAAM,2GACNJ,WAAW,KAIvB,CACIoC,GAAI,QACJhC,KAAM,6BACNa,MAAO,CACH,CACIb,KAAM,SACNwB,KAAM,4GAGdtB,SAAU,CACN,CAACF,KAAM,gDAAkCJ,WAAW,GACpD,CAACI,KAAM,yDAAgDJ,WAAW,GAClE,CAACI,KAAM,+EAAuDJ,WAAW,GACzE,CAACI,KAAM,mCAA+BJ,WAAW,GACjD,CAACI,KAAM,8EAAiDJ,WAAW,GACnE,CAACI,KAAM,0DAAiDJ,WAAW,GACnE,CAACI,KAAM,iGAA0DJ,WAAW,GAC5E,CAACI,KAAM,4CAA8BJ,WAAW,GAChD,CAACI,KAAM,mFAAwDJ,WAAW,GAC1E,CAACI,KAAM,+BAA2BJ,WAAW,GAC7C,CAACI,KAAM,kDAAyCJ,WAAW,KAGnE,CACIoC,GAAI,QACJhC,KAAM,mCACNa,MAAO,CACH,CACIb,KAAM,OACNwB,KAAM,+GAEV,CACIxB,KAAM,gBACNwB,KAAM,mGAGdtB,SAAU,CACN,CAACF,KAAM,kCAAyBJ,WAAW,GAC3C,CAACI,KAAM,2BAAuBJ,WAAW,GACzC,CAACI,KAAM,gFAA6DJ,WAAW,GAC/E,CAACI,KAAM,sCAAkCJ,WAAW,GACpD,CAACI,KAAM,wBAAyBJ,WAAW,GAC3C,CAACI,KAAM,4DAAmDJ,WAAW,GACrE,CAACI,KAAM,sCAA+BJ,WAAW,O,wEAOjE,OAAO,yBAAKD,UAAU,aAClB,kBAAC,IAAD,KACI,6BACI,6BACI,4BAAI,kBAAC,IAAD,CAAMsC,GAAG,KAAKjB,KAAKb,MAAM0B,WAC5Bb,KAAKb,MAAM4B,MAAMd,KAAI,SAAAiB,GACd,OACI,wBAAIZ,IAAKY,EAAKF,IAAI,kBAAC,IAAD,CAAMC,GAAI,IAAMC,EAAKF,IAAKE,EAAKlC,WAMjE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,KACd,2BAAIpB,KAAKb,MAAM2B,eAGlBd,KAAKb,MAAM4B,MAAMd,KAAI,SAAAiB,GACd,OACI,kBAAC,IAAD,CAAOZ,IAAKY,EAAKF,GAAIG,OAAK,EAACC,KAAM,IAAMF,EAAKF,GAAIK,UAAW,kBACvD,kBAAC,EAAD,CAAMrC,KAAMkC,EAAKlC,KACXE,SAAUgC,EAAKhC,SACfW,MAAOqB,EAAKrB,sB,GA5LtCc,aCQLW,MARf,WACI,OACI,yBAAK3C,UAAU,OACX,kBAAC,EAAD,QCKQ4C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAAS/B,SAASgC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3cb0a78b.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Element = (props) => {\n    return <div className={props.isClicked ? 'btn btn-block btn-success' : 'btn btn-block btn-danger'}\n                onClick={() => props.setElementClicked(props.index)}>{props.name}</div>\n};\n\nexport default Element;\n","import React, {Component} from \"react\";\nimport Element from \"./Element\";\n\n\nclass Task extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: props.name,\n            elements: props.elements,\n            links: props.links,\n            index: 0\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.handleSpaceBarClick, false);\n    }\n\n    setElementClicked = (index) => {\n        let elements = this.state.elements;\n        elements[index].isClicked = !elements[index].isClicked;\n        let autoClickedElementIndex = this.state.index;\n        this.setState({\n            elements: elements,\n            index: ++autoClickedElementIndex,\n        })\n    };\n\n    allElementsClicked = () => {\n        return this.state.elements.every(value => value.isClicked)\n    };\n\n    autoClickNextElement = () => {\n        if (!this.allElementsClicked()) {\n            let elements = this.state.elements;\n            let autoClickedElementIndex = this.state.index;\n            elements[autoClickedElementIndex].isClicked = true;\n            this.setState({\n                elements: elements,\n                index: ++autoClickedElementIndex,\n            })\n        }\n    };\n\n    handleSpaceBarClick = (event) => {\n        if (event.keyCode === 32) {\n            this.autoClickNextElement();\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <hr/>\n                <div className=\"row\">\n                    <div className=\"col text-center mb-1\">\n                        <button className={\"btn btn-success btn-lg\"} onClick={this.autoClickNextElement}>Done</button>\n                    </div>\n                </div>\n                {this.state.links == null ? null :\n                    <div className=\"row\">\n                        <div className=\"col-xl-10 offset-1 text-center alert alert-primary\">\n                            {this.state.links.map((element, i) => {\n                                return (<a className=\"alert-link\" target=\"_blank\" rel=\"noopener noreferrer\"\n                                           key={i} href={element.link}>{element.name} || </a>)\n                            })}\n                        </div>\n                    </div>\n                }\n                <div className=\"row\">\n                    <div className=\"btn-group-vertical col-xl-10 offset-1\">\n                        {this.state.elements.map((element, i) => {\n                            return <Element setElementClicked={this.setElementClicked}\n                                            index={i}\n                                            key={i}\n                                            name={element.name}\n                                            isClicked={element.isClicked}/>\n                        })}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-xl-10 offset-1 text-center\">\n                        <h2 style={{color: this.allElementsClicked() ? 'green' : 'red'}}>{this.state.name}</h2>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Task;\n","import React, {Component} from 'react'\nimport Task from \"./Task\";\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom'\n\nclass Tasks extends Component {\n    state = {\n        homePage: 'Strona główna',\n        homePageText: 'Wybierz zadanie do zrobienia',\n        tasks:\n            [\n                {\n                    id: 'task1',\n                    name: \"Porządki\",\n                    links: [\n                        {\n                            name: \"Quick Notes\",\n                            link: \"https://docs.google.com/document/d/1lKqrQYRtmsOP9UGHxnAQOOw01lfaMSjDvesVK4l-8wo/edit#heading=h.enryj93vpczc\"\n                        },\n                        {name: \"Google Drive\", link: \"https://drive.google.com/drive/my-drive\"},\n                    ],\n                    elements: [\n                        {name: \"Organizacja maila głównego\", isClicked: false},\n                        {name: \"Organizacja maila prywatnego\", isClicked: false},\n                        {name: \"Utworzyć taski z Make Notes\", isClicked: false},\n                        {name: \"Quick Notes\", isClicked: false},\n                        {name: \"Notatki w telefonie\", isClicked: false},\n                        {name: \"Google Drive\", isClicked: false}\n                    ]\n                },\n                {\n                    id: 'task2',\n                    name: \"Backup Soft\",\n                    links: [{name: \"Google backup\", link: \"https://takeout.google.com/settings/takeout\"}],\n                    elements: [\n                        {name: \"[Google] Calendar\", isClicked: false},\n                        {name: \"[Google] Chrome (Bookmarks)\", isClicked: false},\n                        {name: \"[Google] Drive (Notes)\", isClicked: false},\n                        {name: \"Skopiować folder Documents -> _Backup_Soft_\", isClicked: false},\n                    ]\n                },\n                {\n                    id: 'task3',\n                    name: \"Backup Hard\",\n                    links: [{name: \"Google backup\", link: \"https://takeout.google.com/settings/takeout\"}],\n                    elements: [\n                        {name: \"OneNote cały notatnik jako doc\", isClicked: false},\n                        {name: \"Folder Documents (Ubuntu)\", isClicked: false},\n                        {name: \"Folder Dane (Dysk D)\", isClicked: false},\n                        {name: \"Chrome Passwords Export\", isClicked: false},\n                        {name: \"[Google] Calendar\", isClicked: false},\n                        {name: \"[Google] Chrome (all)\", isClicked: false},\n                        {name: \"[Google] Contacts\", isClicked: false},\n                        {name: \"[Google] Drive\", isClicked: false},\n                        {name: \"[Google] Mail\", isClicked: false},\n                    ]\n                },\n                {\n                    id: 'task4',\n                    name: \"Nowy miesiąc: Biznes\",\n                    links: [\n                        {name: \"Gaz\", link: \"https://ebok.pgnig.pl/\"},\n                        {name: \"Prąd\", link: \"https://logowanie.tauron.pl/\"},\n                        {name: \"PKO\", link: \"https://www.ipko.pl//\"},\n                        {name: \"mBank\", link: \"https://online.mbank.pl/pl/Login\"},\n                        {name: \"Alior\", link: \"https://system.aliorbank.pl/sign-in\"},\n                        {\n                            name: \"Sheet\",\n                            link: \"https://docs.google.com/spreadsheets/d/1RS4WCPEqILRgId3JlfXZuRd_f6kWZtYg1hzfhM8Y4n8/edit#gid=963549029\"\n                        }\n                    ],\n                    elements: [\n                        {\n                            name: \"Przywrócić czarny kolor kolejnej kolumnie\",\n                        },\n                        {name: \"Sprawdzić czy zgadza się kwota pracy za ostatni miesiąc z przelewem\", isClicked: false},\n                        {name: \"Opłacić media, abonamenty i kredyty, pobrać faktury i potwierdzenia płatności, zapisać kwoty\", isClicked: false},\n                        {name: \"Opłacić X\", isClicked: false},\n                        {name: \"Zapisać pracę biorąc pod uwagę godziny\", isClicked: false},\n                        {name: \"Uzupełnić kwoty z apki\", isClicked: false},\n                        {name: \"Uzupełnić resztę kwot w arkuszu\", isClicked: false},\n                        {name: \"Zaktualizować kwoty w arkuszu Oszczędności po opłaceniu wszystkiego na ten miesiąc\", isClicked: false},\n                        {name: \"Zapisać zsumowaną kwotę na start kolejnego miesiąca\", isClicked: false},\n                        {name: \"Przeanalizować ostatni miesiąc\", isClicked: false}\n                    ]\n                },\n                {\n                    id: 'task5',\n                    name: \"Nowy miesiąc: TODO\",\n                    links: [\n                        {\n                            name: \"Sheets\",\n                            link: \"https://docs.google.com/spreadsheets/d/1RS4WCPEqILRgId3JlfXZuRd_f6kWZtYg1hzfhM8Y4n8/edit#gid=82903271/\"\n                        },\n                    ],\n                    elements: [\n                        {name: \"Skopiować dwie pierwsze kolumny\", isClicked: false},\n                        {name: \"Zmienić nazwę miesiąca\", isClicked: false},\n                        {name: \"Zmienić kolor drugiej kolumny na czarny\", isClicked: false},\n                        {name: \"Insert daty i ustawienie na 1 dzień\", isClicked: false},\n                        {name: \"Pogrubić dzień i zastosować skrót \", isClicked: false},\n                        {name: \"Zaznaczyć pierwszy dzien -> Format -> Text rotation -> Rotate Up\", isClicked: false},\n                        {name: \"Przeciągnąć dni do końca miesiąca\", isClicked: false},\n                        {name: \"Wypełnić wzorcem wszystkie dni\", isClicked: false},\n                        {name: \"Skopiować nie zaznaczony checkbox z któregoś pola\", isClicked: false},\n                        {name: \"Zaznaczyć z ctrl wszystkie puste pola\", isClicked: false},\n                        {\n                            name: \"Wkleić wcześniej zaznaczonego checkboxa (nie wstawić, trzeba skopiować z innego pola checkbox i dopiero skopiować)\",\n                            isClicked: false\n                        },\n                        {name: \"Uruchomić automatyzację do pythona (alias a1)\", isClicked: false},\n                        {name: \"Wstawić formatowanie dat i checkboxów\", isClicked: false},\n                        {name: \"Ukryć wiersze z czynności za poprzedni miesiąc\", isClicked: false},\n                        {name: \"Ustawić kolor kolumny ze wzorem na biały\", isClicked: false},\n                        {\n                            name: \"Instrukcje z końca co do formatowania przekopiować niżej żeby nie przeszkadzały\",\n                            isClicked: false\n                        },\n                    ]\n                },\n                {\n                    id: 'task6',\n                    name: \"Nowy miesiąc: Trening\",\n                    links: [\n                        {\n                            name: \"Sheets\",\n                            link: \"https://docs.google.com/spreadsheets/d/1RS4WCPEqILRgId3JlfXZuRd_f6kWZtYg1hzfhM8Y4n8/edit#gid=568847193/\"\n                        },\n                    ],\n                    elements: [\n                        {name: \"Wpisać nowy miesiąc i pogrubić\", isClicked: false},\n                        {name: \"Insert daty i ustawienie na 1 dzień miesiąca\", isClicked: false},\n                        {name: \"Sformatować datę używając pędzla i daty poprzedniej\", isClicked: false},\n                        {name: \"Wstawić obok pusty checkbox\", isClicked: false},\n                        {name: \"Przeciągnąć datę i checkbox do końca miesiąca\", isClicked: false},\n                        {name: \"Uruchomić automatyzację do pythona (alias a2)\", isClicked: false},\n                        {name: \"Wstawić formułę do dni i przeciągnąć do końca miesiąca\", isClicked: false},\n                        {name: \"Wstawić formuły zliczające\", isClicked: false},\n                        {name: \"Skopiować szkic formuł do następnego miesiąca na dół\", isClicked: false},\n                        {name: \"Szybka analiza miesiąca\", isClicked: false},\n                        {name: \"Ukryć rekordy z poprzedniego miesiąca\", isClicked: false},\n                    ]\n                },\n                {\n                    id: 'task7',\n                    name: \"Comiesięczne czynności\",\n                    links: [\n                        {\n                            name: \"Docs\",\n                            link: \"https://docs.google.com/document/d/1lKqrQYRtmsOP9UGHxnAQOOw01lfaMSjDvesVK4l-8wo/edit#heading=h.b36bz1pk3gth\"\n                        },\n                        {\n                            name: \"Sheets Szekle\",\n                            link: \"https://docs.google.com/spreadsheets/d/1u4sHO-mkux9d0xELt6XRo3IVpdoQrDb0cvN-U4ZQZ-E/edit#gid=0\"\n                        },\n                    ],\n                    elements: [\n                        {name: \"Przebadać się (p i j)\", isClicked: false},\n                        {name: \"Przetestować czujki\", isClicked: false},\n                        {name: \"Sprawdzić luzy i stan śrub w hulajnodze, dopompować dętki\", isClicked: false},\n                        {name: \"Kupić potrzebne rzeczy z docsa\", isClicked: false},\n                        {name: \"Organizacja Temp Docs\", isClicked: false},\n                        {name: \"Aktualizacja arkusza z cyklicznymi płatnościami\", isClicked: false},\n                        {name: \"Zaaplikować sól do zmywarki\", isClicked: false},\n                    ]\n                },\n            ]\n    };\n\n    render() {\n        return <div className=\"container\">\n            <Router>\n                <div>\n                    <nav>\n                        <h2><Link to=\"/\">{this.state.homePage}</Link></h2>\n                        {this.state.tasks.map(task => {\n                                return (\n                                    <h2 key={task.id}><Link to={'/' + task.id}>{task.name}</Link></h2>\n                                )\n                            }\n                        )}\n                    </nav>\n\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <p>{this.state.homePageText}</p>\n                        </Route>\n\n                        {this.state.tasks.map(task => {\n                                return (\n                                    <Route key={task.id} exact path={'/' + task.id} component={() =>\n                                        <Task name={task.name}\n                                              elements={task.elements}\n                                              links={task.links}/>}>\n                                    </Route>)\n                            }\n                        )}\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    }\n}\n\nexport default Tasks;\n","import React from 'react';\nimport './App.css';\nimport Tasks from './components/Tasks'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Tasks/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}